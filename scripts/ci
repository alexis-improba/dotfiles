#!/usr/bin/env bash
#
# Interactively commit changes to the repository.
#
WHITE="\e[0m"
GREEN="\e[32;1m"
BLUE="\e[34;1m"

TYPE=$(gum choose "fix:      A bug fix" "feat:     A new feature" "docs:     Documentation only change" "style:    Changes that do not affect the meaning of the code" "refactor: A code change that neither fixes a bug nor adds a feature" "test:     Adding missing or correcting existing tests" "chore:    Other changes that don't modify src or test files" "build:    Changes that affect the build system or external dependencies" --header="Select the type of change:" --no-show-help)

if [[ -z "${TYPE}" ]]; then
    exit 1
else
    TYPE="$(echo "${TYPE}" | cut -d: -f1)"
fi

echo -e "Select the type of change: ${BLUE}${TYPE}${WHITE}"

SCOPE=$(gum input --prompt="What is the scope of this change? " --placeholder="scope (optional)" --no-show-help)

echo -e "What is the scope of this change: ${BLUE}${SCOPE:--}${WHITE}"

# Since the scope is optional, wrap it in parentheses if it has a value.
test -n "$SCOPE" && SCOPE="($SCOPE)"

SUMMARY=$(gum input --prompt="Write a short summary of the code change: " --placeholder "change summary" --no-show-help)
test -z "${SUMMARY}" && exit 1

echo -e "Write a short summary of the code change: ${BLUE}${SUMMARY}${WHITE}"

# DESCRIPTION=$(gum write --placeholder "Details of this change" --no-show-help)

IS_BREAKING="$(gum choose "Yes" "No" --header="Is this a breaking change?" --no-show-help)"
echo -e "Is this a breaking change: ${BLUE}${IS_BREAKING}${WHITE}"

test "${IS_BREAKING}" = "Yes" && BREAKING="!" || BREAKING=""

MESSAGE="${TYPE}${BREAKING}${SCOPE}: ${SUMMARY}"

echo -e "\nCommit message: ${GREEN}${MESSAGE}${WHITE}"
git commit -m "${MESSAGE}" # -m "$DESCRIPTION"
